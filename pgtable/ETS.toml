arch = "AArch64"
name = "ETS"
symbolic = ["x", "y", "z"]

page_table_setup = """
    physical pa1 pa2 pa3;
    x |-> pa1;
    x ?-> invalid;
    y |-> pa2;
    z |-> pa3;
    identity 0x1000 with code;
"""

[types]
x = "uint64_t"

[thread.0]
code = """
  MOV X0,#1
  STR X0,[X3]
  DMB SY
  STR X0,[X2]
"""

[thread.0.reset]
R2 = "y"
R3 = "z"

[thread.1]
code = """
    LDR X0,[X2]
    STR X0,[X1]
    MOV X4,#2
    STR X4,[X1]
"""

[thread.1.reset]
R0 = "extz(0b0, 64)"
R1 = "x"
R2 = "y"
R3 = "z"
R6 = "pte3(x, page_table_base)"
R7 = "extz(0b1, 64)" 
VBAR_EL1 = "extz(0x1000, 64)"

[thread.2]
code = """
    MOV X0,#0
    STR X0,[X1]
"""

[thread.2.reset]
R1 = "pte3(x, page_table_base)"

[section.thread1_el1_handler]
address = "0x1400"
code = """
     LDR X7,[X3]
"""

[final]
# Final assertion is:
# 1) the first load in thread 1 reads from thread 0
# 2) the first write to x in thread 1 succeeds
# 3) the second write to x faults so take the exception and read zero from z
assertion = "1:R0 = 1 & *x = 1 & 1:R7 = 0"

arch = "AArch64"
name = "pKVM.vcpu_run.update_vmid.concurrent"
symbolic = []

page_table_setup = """
option default_tables = false;

virtual x ipi kvm_vmid_lock;
physical pa1 pa2 pa_ipi pa_kvm_vmid_lock;
intermediate ipa1 ipa2;

s1table hyp_map 0x200000 {
  identity 0x1000 with code;
  identity 0x2000 with code;
  ipi |-> pa_ipi;
  kvm_vmid_lock |-> pa_kvm_vmid_lock;
  x |-> invalid;
}
s2table vm1_stage2 0x240000 {
  ipa1 |-> pa1;
  ipa2 |-> invalid;
  s1table vm1_stage1 0x2C0000 {
    x |-> ipa1;
  }
}
s2table vm2_stage2 0x280000 {
  ipa1 |-> invalid;
  ipa2 |-> pa2;
  s1table vm2_stage1 0x300000 {
    x |-> ipa2;
  }
}
*pa1 = 1;
*pa2 = 2;
*pa_ipi = 0;
*pa_kvm_vmid_lock = 1;
"""

[thread.0]
code = """
  MOV X0,#0
  LDR X0,[X1] // in guest
  HVC #0x0
  MOV X4,#0
  LDR X4,[X5] // in guest
"""

[section.thread0_el2_handler]
address = "0x1400" # 0x400 - Lower Exception Level
code = """
  MRS X20, ESR_EL2
  // read ESR_EL2.EC
  UBFX X20, X20, #26, #5
  // if EC==HVC (010110)
  SUBS X20, X20, 0b010110
  // Branch to HVC handle
  CBZ X20, 2f

// EC==DABT
1:
  MRS X20,ELR_EL2
  ADD X20,X20,#4
  MSR ELR_EL2,X20
  ERET

// EC=HVC
2:
  STR X6,[X7] // kvm/arm.c:551 force_vm_exit(cpu_all_mask);
  LDR X8,[X9] // kvm/arm.c:551 force_vm_exit(cpu_all_mask);
  DSB ISHST // kvm/hyp/nvhe/tlb.c:145
  TLBI ALLE1IS // kvm/hyp/nvhe/tlb.c:146
  DSB SY // kvm/hyp/nvhe/tlb.c:160

  STR X10,[X11] // kvm/arm.c:567 spin_unlock(&kvm_vmid_lock);

  MSR TTBR0_EL1,X12 // kvm/hyp/sysreg-sr.h:96
  MSR VTTBR_EL2,X13 // include/asm/kvm_mmu.h:276
  ERET              // kvm/hyp/nvhe/host.S
"""

[thread.0.reset]
R1 = "x"
R5 = "x"
R6 = "extz(0b1, 64)"
R7 = "ipi"
R9 = "ipi"
R10 = "extz(0b0, 64)"
R11 = "kvm_vmid_lock"
R12 = "ttbr(asid=0x00, base=vm2_stage1)"
R13 = "ttbr(vmid=0x0001, base=vm2_stage2)"  # same VMID
TTBR0_EL2 = "ttbr(asid=0x00, base=hyp_map)"
VTTBR_EL2 = "ttbr(vmid=0x0001, base=vm1_stage2)"
TTBR0_EL1 = "ttbr(asid=0x00, base=vm1_stage1)"
VBAR_EL2 = "extz(0x1000, 64)"

"PSTATE.EL" = "0b01"

[thread.1]
code = """
  MOV X0,#0
  LDR X0,[X1] // in guest
  HVC #0x0 // fake IPI => vcpu_run
  MOV X4,#0
  LDR X4,[X5] // in guest
"""

[section.thread1_el2_handler]
address = "0x2400" # 0x400 - Lower Exception Level
code = """
  MRS X20, ESR_EL2
  // read ESR_EL2.EC
  UBFX X20, X20, #26, #5
  // if EC==HVC (010110)
  SUBS X20, X20, 0b010110
  // Branch to HVC handle
  CBZ X20, 2f

// EC==DABT
1:
  MRS X20,ELR_EL2
  ADD X20,X20,#4
  MSR ELR_EL2,X20
  ERET

// EC=HVC
2:
  //  on recv ipi
  LDR X6, [X7] // smb receive
  MOV X8, #2
  STR X8, [X7] // smb reply
  // later automatically calls vcpu_run(host)
  LDAR X10,[X11] // kvm/hyp/include/nvhe/spinlock.h
  MSR TTBR0_EL1,X12 // kvm/hyp/sysreg-sr.h:96
  MSR VTTBR_EL2,X13 // include/asm/kvm_mmu.h:276
  ERET             // kvm/hyp/nvhe/host.S
"""

[thread.1.reset]
R1 = "x"
R5 = "x"

R7 = "ipi"
R11 = "kvm_vmid_lock"

R12 = "ttbr(asid=0x00, base=vm2_stage1)"
R13 = "ttbr(vmid=0x0001, base=vm2_stage2)"  # same VMID
TTBR0_EL2 = "ttbr(asid=0x00, base=hyp_map)"
VTTBR_EL2 = "ttbr(vmid=0x0001, base=vm1_stage2)"
TTBR0_EL1 = "ttbr(asid=0x00, base=vm1_stage1)"
VBAR_EL2 = "extz(0x2000, 64)"

"PSTATE.EL" = "0b01"

[final]
assertion = "0:X0=1 & 0:X8=2 & 0:X4=2 & 1:X0=1 & 1:X6=1 & 1:X10=0"